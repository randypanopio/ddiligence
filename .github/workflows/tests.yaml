name: Executes Tests

on:
  push:
    branches:
      - staging
      - main
  pull_request:
    branches:
        - staging
        - main

# Tags:
# [skip-all] skips all tests, also checks if tag is set by admin
# [client_react] runs ONLY necessary tests and workflows of client_react 
# [firebase_functions] runs ONLY necessary tests of firebase cloud functions 
# [app_flask] runs ONLY necessary tests and workflows of Flask API backend 

jobs:
  check-skip-tag:
    runs-on: ubuntu-latest    
    outputs:
      skip_all: ${{ steps.set_skip_all.outputs.skip_all }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Check if commit message contains [skip-all]
        id: set_skip_all
        run: |
          if grep -qiE "\[skip-all\]" <<< "$(git log --format=%B -n 1 ${{ github.sha }})"; then
            echo "skip_all=true" >> $GITHUB_STATE
          else
          echo "skip_all=false" >> $GITHUB_STATE
          fi

  check-admin-perms:
    runs-on: ubuntu-latest
    needs: check-skip-tag
    if: needs.check-skip-tag.outputs.skip_all == 'true'
    steps:
      - name: Check user permissions
        uses: actions-cool/check-user-permission@v2
        id: check
        with:
          require: 'admin'
          check-contributor: true
    
      - name: Check if user is admin
        run: |
          if [[ "${{ steps.check.outputs.user-permission }}" == "admin" ]]; then
            echo "User is an admin. Skipping pipeline execution."
            exit 0  # Exit with success code
          else
            echo "User is not an admin. Failing the job."
            exit 1  # Exit with failure code
          fi

  run-client_react-suite:
    runs-on: ubuntu-latest
    needs: check-tags-and-run
    if: ${{ needs.check-tags-and-run.outputs.run_client_react == 'true' || needs.check-tags-and-run.outputs.run_all_suites == 'true' }}
    steps:
      - name: run suite
        run: echo "run_client_react-suite"     

      - name: echo trigger
        run: |
          echo "run_client_react: ${{ needs.check-tags-and-run.outputs.run_client_react}}, run_all_suites: ${{needs.check-tags-and-run.outputs.run_all_suites}}"        

  run-firebase_functions-suite:
    runs-on: ubuntu-latest
    needs: check-tags-and-run
    if: ${{ needs.check-tags-and-run.outputs.run_firebase_functions == 'true' || needs.check-tags-and-run.outputs.run_all_suites == 'true' }}
    defaults:
      run:
        working-directory: database/firebase/functions
    env:
      GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x

      - name: echo trigger
        run: |
          echo "run_firebase_functions: ${{ needs.check-tags-and-run.outputs.run_firebase_functions}}, run_all_suites: ${{needs.check-tags-and-run.outputs.run_all_suites}}"

      - name: Install dependencies
        run: |
          pip install -r requirements.txt  # Install dependencies

      - name: Run tests
        run: |
          python -m unittest discover -s tests  # Run test on the functions/tests directory

      - name: Check test status and prevent merge/push on failure
        if: ${{ failure() }}
        run: exit 1  # Exit with a non-zero code to fail the workflow

  run-app_flask-suite:
    runs-on: ubuntu-latest
    needs: check-tags-and-run
    if: ${{ needs.check-tags-and-run.outputs.run_app_flask == 'true' || needs.check-tags-and-run.outputs.run_all_suites == 'true' }}
    defaults:
      run:
        working-directory: ./app_flask
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x

      - name: echo trigger
        run: |
          echo "run_app_flask: ${{ needs.check-tags-and-run.outputs.run_app_flask}}, run_all_suites: ${{needs.check-tags-and-run.outputs.run_all_suites}}"

      - name: Install dependencies
        run: |
          pip install -r requirements.txt  # Install dependencies

      - name: Run tests
        run: |
          python -m unittest discover -s tests  # Run Python tests

      - name: Check test status and prevent merge/push on failure
        if: ${{ failure() }}
        run: exit 1  # Exit with a non-zero code to fail the workflow

  check-tags-and-run:
    runs-on: ubuntu-latest
    needs: check-skip-tag
    if: needs.check-skip-tag.outputs.skip_all != 'true'
    outputs:
      run_client_react: ${{ steps.set_client_react.outputs.client_react }}
      run_firebase_functions: ${{ steps.set_firebase_functions.outputs.firebase_functions }}
      run_app_flask: ${{ steps.set_app_flask.outputs.app_flask }}
      run_all_suites: ${{ steps.set_all_suites.outputs.all_suites }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Check if commit message contains [client_react]
        id: set_client_react
        run: |
          if grep -qiE "\[client_react\]" <<< "$(git log --format=%B -n 1 ${{ github.sha }})"; then
            echo "client_react=true" >> $GITHUB_OUTPUT
          else
            echo "client_react=false" >> $GITHUB_OUTPUT
          fi

      - name: Check if commit message contains [firebase_functions]
        id: set_firebase_functions
        run: |
          if grep -qiE "\[firebase_functions\]" <<< "$(git log --format=%B -n 1 ${{ github.sha }})"; then
            echo "firebase_functions=true" >> $GITHUB_OUTPUT
          else
            echo "firebase_functions=false" >> $GITHUB_OUTPUT
          fi

      - name: Check if commit message contains [app_flask]
        id: set_app_flask
        run: |
          if grep -qiE "\[app_flask\]" <<< "$(git log --format=%B -n 1 ${{ github.sha }})"; then
            echo "app_flask=true" >> $GITHUB_OUTPUT         
          else
            echo "app_flask=false" >> $GITHUB_OUTPUT
          fi

      - name: Set all_suites output
        id: set_all_suites
        run: |
          if [[ "${{ steps.set_client_react.outputs.client_react }}" == 'false' && \
                "${{ steps.set_firebase_functions.outputs.firebase_functions }}" == 'false' && \
                "${{ steps.set_app_flask.outputs.app_flask }}" == 'false' ]]; then
            echo "all_suites=true" >> $GITHUB_OUTPUT
          else
            echo "all_suites=false" >> $GITHUB_OUTPUT
          fi