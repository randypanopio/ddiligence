name: Executes Tests

on:
  push:
    branches:
      - staging
      - main
  pull_request:
    branches:
        - staging
        - main

# Tags:
# [skip-all] skips all tests, also checks if tag is set by admin
# [client_react] runs ONLY necessary tests and workflows of client_react 
# [firebase_functions] runs ONLY necessary tests of firebase cloud functions 
# [app_flask] runs ONLY necessary tests and workflows of Flask API backend 

jobs:
  run-client_react-suite:
    runs-on: ubuntu-latest
    needs: check-tags-and-run
    if: ${{ needs.check-tags-and-run.outputs.run_client_react == 'true' || needs.check-tags-and-run.outputs.run_all_suites == 'true' }}
    steps:
      - name: run suite
        run: echo "run_client_react-suite"     

  run-firebase_functions-suite:
    runs-on: ubuntu-latest
    needs: check-tags-and-run
    if: ${{ needs.check-tags-and-run.outputs.run_firebase_functions == 'true' || needs.check-tags-and-run.outputs.run_all_suites == 'true' }}
    defaults:
      run:
        working-directory: database/firebase/functions
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x

      - name: Install dependencies
        run: |
          pip install -r requirements.txt  # Install dependencies

      - name: Run tests
        run: |
          python -m unittest discover -s tests  # Run test on the functions/tests directory

      - name: Check test status and prevent merge/push on failure
        if: ${{ failure() }}
        run: exit 1  # Exit with a non-zero code to fail the workflow

  run-app_flask-suite:
    runs-on: ubuntu-latest
    needs: check-tags-and-run
    if: ${{ needs.check-tags-and-run.outputs.run_app_flask == 'true' || needs.check-tags-and-run.outputs.run_all_suites == 'true' }}
    defaults:
      run:
        working-directory: ./app_flask
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x

      - name: Install dependencies
        run: |
          pip install -r requirements.txt  # Install dependencies

      - name: Run tests
        run: |
          python -m unittest discover -s tests  # Run Python tests

      - name: Check test status and prevent merge/push on failure
        if: ${{ failure() }}
        run: exit 1  # Exit with a non-zero code to fail the workflow

  check-tags-and-run:
    runs-on: ubuntu-latest
    outputs:
      run_client_react: ${{ steps.set_client_react.outputs.client_react }}
      run_firebase_functions: ${{ steps.set_firebase_functions.outputs.firebase_functions }}
      run_app_flask: ${{ steps.set_app_flask.outputs.app_flask }}
      run_all_suites: ${{ steps.set_all_suites.outputs.all_suites }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Check if commit message contains [client_react]
        id: set_client_react
        run: |
          if grep -qiE "\[client_react\]" <<< "$(git log --format=%B -n 1 ${{ github.sha }})"; then
            echo "::set-output name=client_react::true"
            echo "::set-output name=run_all_suites::true"
          else
            echo "::set-output name=client_react::false"
          fi

      - name: Check if commit message contains [firebase_functions]
        id: set_firebase_functions
        run: |
          if grep -qiE "\[firebase_functions\]" <<< "$(git log --format=%B -n 1 ${{ github.sha }})"; then
            echo "::set-output name=firebase_functions::true"
            echo "::set-output name=run_all_suites::true"
          else
            echo "::set-output name=firebase_functions::false"
          fi

      - name: Check if commit message contains [app_flask]
        id: set_app_flask
        run: |
          if grep -qiE "\[app_flask\]" <<< "$(git log --format=%B -n 1 ${{ github.sha }})"; then
            echo "::set-output name=app_flask::true"
            echo "::set-output name=run_all_suites::true"
          else
            echo "::set-output name=app_flask::false"
          fi

      - name: Set all_suites output
        id: set_all_suites
        run: |
          if [[ "${{ steps.set_client_react.outputs.client_react }}" == 'false' && \
                "${{ steps.set_firebase_functions.outputs.firebase_functions }}" == 'false' && \
                "${{ steps.set_app_flask.outputs.app_flask }}" == 'false' ]]; then
            echo "::set-output name=all_suites::true"
          else
            echo "::set-output name=all_suites::false"
          fi