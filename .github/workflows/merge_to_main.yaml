name: Merge Staging to Main

on:
  workflow_run:
    workflows: ["Staging - Python Backend Tests"]
    types:
      - completed

jobs:
  check-commit:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Check commit message for tags
        run: |
          if grep -qiE "\[skip-all\]|\[skip ci\]" <<< "$(git log --format=%B -n 1 ${{ github.sha }})"; then
            echo "Skipping pipeline as commit message contains [skip-all], or [skip ci]."
            exit 78  # Exit with a neutral code
          else
            echo "Commit message does not contain any skip tags. Proceeding."
          fi

  merge_to_main:
    runs-on: ubuntu-latest

    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set Git config
        run: |
          git config --local user.email "actions@users.noreply.github.com"
          git config --local user.name "Github Actions"    

      - name: Detach HEAD
        run: |
          git checkout --detach

      - name: Fetch latest changes on main and staging branches
        run: |
          git fetch origin main:main
          git fetch origin staging:staging

      - name: Merge cicd into main
        run: |
          git checkout main
          git merge --no-ff --allow-unrelated-histories staging -m "Automation: merge staging to main"

      - name: Push changes on main to remote 
        run: |
          git push origin main --force
